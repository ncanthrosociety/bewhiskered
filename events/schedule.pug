extends /base


block variables

  include /mixins/schedule/events-list
  include /mixins/schedule/event-tile

  -
    var title = 'BWS 2021 Events Schedule'

    function formatDateForID(dateString) {
      return dateString.toLowerCase().replaceAll(' ', '-').replaceAll(',', '')
    }

    const dateFormat = Intl.DateTimeFormat('en-us', {weekday: 'long', month: 'short', day: 'numeric'})
    const timeFormat = Intl.DateTimeFormat('en-us', {timeStyle: 'short'})

    const sorted = events
            .slice()
            .sort((a, b) => a.type.localeCompare(b.type))
            .sort((a, b) => a.start - b.start)

    let timeBucket = []
    let dateBucket = []
    let buckets = []

    if (sorted.length) {
      let previousDate = dateFormat.format(sorted[0].start)
      let previousTime = timeFormat.format(sorted[0].start)

      for (let event of sorted) {
        const date = dateFormat.format(event.start)
        const time = timeFormat.format(event.start)

        if (time !== previousTime) {
          dateBucket.push([previousTime, timeBucket])
          timeBucket = []
        }

        if (date !== previousDate) {
          buckets.push([previousDate, dateBucket])
          dateBucket = []
        }

        timeBucket.push(event)

        previousDate = date
        previousTime = time
      }

      dateBucket.push([previousTime, timeBucket])
      buckets.push([previousDate, dateBucket])
    }


block navbar-page-links

  each dateEntry in buckets
    - let date = dateEntry[0]

    li(class='nav-item')
      a(class='nav-link js-scroll-trigger' href=`#events-schedule-${formatDateForID(date)}`)=date


block content

  div(class='col text-center mb-2')
    a(class='btn btn-lg btn-outline-primary' href='https://tinyurl.com/yz2zsq59' target='_blank') Google Calendar

  each dateEntry in buckets
    - let date = dateEntry[0]
    - let times = dateEntry[1]

    section(id=`events-schedule-${formatDateForID(date)}`)
      h1=date

      table(class='table schedule-table')
        thead(class='thead-light')
          tr
            th Time
            th Events
        tbody
          each timeEntry in times
            - let time = timeEntry[0]
            - let events = timeEntry[1]

            tr
              td=time
              td
                each event in events
                  +event-tile(event)
